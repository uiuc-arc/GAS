import numpy as np

def eval43Poly(cs, x):
  result = np.empty((len(cs),x.shape[1]))
  for idx, c in enumerate(cs):
    result[idx,:] = c[0]+x[2,:]*(c[1]+x[2,:]*(c[2]+x[2,:]*(c[3]+x[2,:]*(c[4]))))+x[1,:]*(c[5]+x[2,:]*(c[6]+x[2,:]*(c[7]+x[2,:]*(c[8])))+x[1,:]*(c[9]+x[2,:]*(c[10]+x[2,:]*(c[11]))+x[1,:]*(c[12]+x[2,:]*(c[13])+x[1,:]*(c[14]))))+x[0,:]*(c[15]+x[2,:]*(c[16]+x[2,:]*(c[17]+x[2,:]*(c[18])))+x[1,:]*(c[19]+x[2,:]*(c[20]+x[2,:]*(c[21]))+x[1,:]*(c[22]+x[2,:]*(c[23])+x[1,:]*(c[24])))+x[0,:]*(c[25]+x[2,:]*(c[26]+x[2,:]*(c[27]))+x[1,:]*(c[28]+x[2,:]*(c[29])+x[1,:]*(c[30]))+x[0,:]*(c[31]+x[2,:]*(c[32])+x[1,:]*(c[33])+x[0,:]*(c[34]))))
  return result

def eval63Poly(cs, x):
  result = np.empty((len(cs),x.shape[1]))
  for idx, c in enumerate(cs):
    result[idx,:] = c[0]+x[2,:]*(c[1]+x[2,:]*(c[2]+x[2,:]*(c[3]+x[2,:]*(c[4]+x[2,:]*(c[5]+x[2,:]*(c[6]))))))+x[1,:]*(c[7]+x[2,:]*(c[8]+x[2,:]*(c[9]+x[2,:]*(c[10]+x[2,:]*(c[11]+x[2,:]*(c[12])))))+x[1,:]*(c[13]+x[2,:]*(c[14]+x[2,:]*(c[15]+x[2,:]*(c[16]+x[2,:]*(c[17]))))+x[1,:]*(c[18]+x[2,:]*(c[19]+x[2,:]*(c[20]+x[2,:]*(c[21])))+x[1,:]*(c[22]+x[2,:]*(c[23]+x[2,:]*(c[24]))+x[1,:]*(c[25]+x[2,:]*(c[26])+x[1,:]*(c[27]))))))+x[0,:]*(c[28]+x[2,:]*(c[29]+x[2,:]*(c[30]+x[2,:]*(c[31]+x[2,:]*(c[32]+x[2,:]*(c[33])))))+x[1,:]*(c[34]+x[2,:]*(c[35]+x[2,:]*(c[36]+x[2,:]*(c[37]+x[2,:]*(c[38]))))+x[1,:]*(c[39]+x[2,:]*(c[40]+x[2,:]*(c[41]+x[2,:]*(c[42])))+x[1,:]*(c[43]+x[2,:]*(c[44]+x[2,:]*(c[45]))+x[1,:]*(c[46]+x[2,:]*(c[47])+x[1,:]*(c[48])))))+x[0,:]*(c[49]+x[2,:]*(c[50]+x[2,:]*(c[51]+x[2,:]*(c[52]+x[2,:]*(c[53]))))+x[1,:]*(c[54]+x[2,:]*(c[55]+x[2,:]*(c[56]+x[2,:]*(c[57])))+x[1,:]*(c[58]+x[2,:]*(c[59]+x[2,:]*(c[60]))+x[1,:]*(c[61]+x[2,:]*(c[62])+x[1,:]*(c[63]))))+x[0,:]*(c[64]+x[2,:]*(c[65]+x[2,:]*(c[66]+x[2,:]*(c[67])))+x[1,:]*(c[68]+x[2,:]*(c[69]+x[2,:]*(c[70]))+x[1,:]*(c[71]+x[2,:]*(c[72])+x[1,:]*(c[73])))+x[0,:]*(c[74]+x[2,:]*(c[75]+x[2,:]*(c[76]))+x[1,:]*(c[77]+x[2,:]*(c[78])+x[1,:]*(c[79]))+x[0,:]*(c[80]+x[2,:]*(c[81])+x[1,:]*(c[82])+x[0,:]*(c[83]))))))
  return result
